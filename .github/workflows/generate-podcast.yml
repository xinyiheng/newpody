name: Generate Podcast

on:
  schedule:
    - cron: '0 22-23 * * *'  # 在 UTC 22:00 和 23:00 运行
  workflow_dispatch:      # 允许手动触发
  push:
    branches:
      - main  # 只在主分支上触发

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:         
      contents: write    
      issues: write     # 添加创建 issues 的权限
    
    steps:
    - uses: actions/checkout@v4  # 升级到 v4
      with:
        ref: gh-pages
        path: gh-pages
        
    - uses: actions/checkout@v4  # 升级到 v4
      with:
        path: main
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # 缓存 pip 包
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('main/**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # 添加文章缓存
    - name: Cache article data
      uses: actions/cache@v3
      with:
        path: main/article_cache.json  # 修改为相对于工作目录的路径
        key: ${{ runner.os }}-article-cache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-article-cache-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r main/requirements.txt
    
    - name: Copy existing podcasts
      run: |
        if [ -d "gh-pages/podcasts" ]; then
          mkdir -p main/web/public/podcasts
          cp -r gh-pages/podcasts/* main/web/public/podcasts/
        fi
        if [ -f "gh-pages/podcast_index.json" ]; then
          cp gh-pages/podcast_index.json main/web/public/
        fi
    
    - name: Generate podcast
      id: generate  # 添加 id 以便后续步骤引用
      run: |
        cd main
        pwd  # 打印当前工作目录
        ls -la  # 列出目录内容
        python scripts/generate_podcast.py
      env:
        API_KEY: ${{ secrets.API_KEY }}
        FISH_API_KEY: ${{ secrets.FISH_API_KEY }}
      continue-on-error: true  # 允许失败继续执行后续步骤
    
    - name: Send notification on failure
      if: steps.generate.outcome == 'failure'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Podcast generation failed',
            body: `Workflow run: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`
          })
    
    - name: Deploy to GitHub Pages
      if: steps.generate.outcome == 'success'  # 只在生成成功时部署
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./main/web/public
        keep_files: true
    
    - name: Debug Info
      run: |
        echo "Current time: $(date)"
        echo "Current UTC time: $(date -u)"
        echo "GitHub event: ${{ github.event_name }}"
        echo "Trigger type: ${{ github.event.schedule || 'manual' }}"
        echo "Generation status: ${{ steps.generate.outcome }}"
